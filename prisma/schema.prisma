// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  User
  Admin
}

model User {
  userId   Int       @id @unique @default(autoincrement())
  username String    @unique
  email    String    @unique
  password String
  name     String
  avatar   String
  role     Role      @default(User)
  product  Product[]
  saved    Saved[]
}

model Product {
  productId   Int            @id @unique @default(autoincrement())
  name        String
  description String
  image       String
  price       Int
  cover       String
  status      Boolean
  authorId    Int
  author      User           @relation(fields: [authorId], references: [userId])
  categoryId  Int
  category    Category       @relation(fields: [categoryId], references: [categoryId])
  saved       ProductSaved[]
}

model Category {
  categoryId   Int       @id @unique @default(autoincrement())
  categoryName String
  Product      Product[]
}

model Saved {
  savedId      Int            @id @unique @default(autoincrement())
  userId       Int
  user         User           @relation(fields: [userId], references: [userId])
  savedProduct ProductSaved[]
}

model ProductSaved {
  productId Int
  product   Product @relation(fields: [productId], references: [productId])
  savedId   Int
  saved     Saved   @relation(fields: [savedId], references: [savedId])

  @@id([productId, savedId])
}
